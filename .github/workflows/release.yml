name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # e.g. v1.1.1, v2.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, macos, windows]
        arch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build binary
        run: |
          mkdir -p dist/${{ matrix.os }}
          if [[ "${{ matrix.os }}" == "linux" ]]; then
            GOOS=linux   GOARCH=${{ matrix.arch }} CGO_ENABLED=0 \
              go build -ldflags="-s -w" -o dist/linux/smartcommit-linux .
          elif [[ "${{ matrix.os }}" == "macos" ]]; then
            GOOS=darwin  GOARCH=${{ matrix.arch }} CGO_ENABLED=0 \
              go build -ldflags="-s -w" -o dist/macos/smartcommit-macos .
          else
            GOOS=windows GOARCH=${{ matrix.arch }} CGO_ENABLED=0 \
              go build -ldflags="-s -w" -o dist/windows/smartcommit-windows.exe .
          fi

      - name: Package archives
        run: |
          if [[ "${{ matrix.os }}" == "linux" ]]; then
            tar -czvf dist/smartcommit-linux.tar.gz -C dist/linux smartcommit-linux
          elif [[ "${{ matrix.os }}" == "macos" ]]; then
            tar -czvf dist/smartcommit-macos.tar.gz -C dist/macos smartcommit-macos
          else
            tar -czvf dist/smartcommit-windows.tar.gz -C dist/windows smartcommit-windows.exe
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/smartcommit-linux.tar.gz
            dist/smartcommit-macos.tar.gz
            dist/smartcommit-windows.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
